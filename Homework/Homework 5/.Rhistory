library(tidyverse)
read_csv("test_control.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_csv("test_control.csv")
test_group <- data[grep("Test", data),]
View(test_group)
test_group <- data[grep("Test", data$exposed),]
View(test_group)
View(test_group)
test_group <- data[grep("Test", data$exposed),]
num_purchased_test <- sum(test_group$purchased)
proportion_purchased_test <- num_purchased_test/length(test_group)
control_group <- data[grep("Control", data$exposed),]
num_purchased_control <- sum(control_group$purchased)
proportion_purchased_test <- num_purchased_control/length(control_group)
test_group <- data[grep("Test", data$exposed),]
num_purchased_test <- sum(test_group$purchased)
proportion_purchased_test <- num_purchased_test/length(test_group)
control_group <- data[grep("Control", data$exposed),]
num_purchased_control <- sum(control_group$purchased)
proportion_purchased_control <- num_purchased_control/length(control_group)
test_group <- data[grep("Test", data$exposed),]
num_purchased_test <- sum(test_group$purchased)
proportion_purchased_test <- num_purchased_test/length(test_group)
control_group <- data[grep("Control", data$exposed),]
num_purchased_control <- sum(control_group$purchased)
proportion_purchased_control <- num_purchased_control/length(control_group)
barplot(test_group$gender)
barplot(counts)
counts <- table(test_group$gender)
barplot(counts)
par(mfrow=c(1,2))
test_counts <- table(test_group$gender, xlab = "Gender", main = "Gender Distribution for the Test Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Gender Distribution for the Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Gender Distribution for the Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Gender Distribution for the Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Gender Distribution for the Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Control Sample")
test_counts <- table(test_group$age)
barplot(test_counts, xlab = "Age", main = "Test Sample")
control_counts <- table(control_group$age)
barplot(control_counts, xlab = "Age", main = "Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$age)
barplot(test_counts, xlab = "Age", main = "Test Sample")
control_counts <- table(control_group$age)
barplot(control_counts, xlab = "Age", main = "Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$income)
barplot(test_counts, xlab = "Income", main = "Test Sample")
control_counts <- table(control_group$income)
barplot(control_counts, xlab = "Income", main = "Control Sample")
counts <- table(data$gender)
barplot(test_counts, xlab = "Gender", main = "Gender Distribution")
counts <- table(data$age)
barplot(test_counts, xlab = "Age", main = "Age Distribution")
counts <- table(data$income)
barplot(test_counts, xlab = "Income", main = "Income Distribution")
counts <- table(data$age)
barplot(test_counts, xlab = "Age", main = "Age Distribution")
counts <- table(data$age)
barplot(counts, xlab = "Age", main = "Age Distribution")
counts <- table(data$gender)
barplot(counts, xlab = "Gender", main = "Gender Distribution")
counts <- table(data$age)
barplot(counts, xlab = "Age", main = "Age Distribution")
par(mfrow=c(1,2))
test_counts <- table(test_group$age)
barplot(test_counts, xlab = "Age", main = "Test Sample")
control_counts <- table(control_group$age)
barplot(control_counts, xlab = "Age", main = "Control Sample")
# don't forget to answer the last question in plain text after your code and plots - not as a comment.
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$income)
barplot(test_counts, xlab = "Income", main = "Test Sample")
control_counts <- table(control_group$income)
barplot(control_counts, xlab = "Income", main = "Control Sample")
# don't forget to answer the last question in plain text after your code and plots - not as a comment.
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Control Sample", scale = "percent")
# don't forget to answer the last question in plain text after your code and plots - not as a comment.
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Control Sample", scale = "percent")
compute_confidence_interval <- function(p1, p2, n1, n2, Z){
confidence_interval <- rep(0, times = 2)
confidence_interval[1] <- p1 - p2 - Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2)))
confidence_interval[2] <- p1 - p2 + Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2)))
return(confidence_interval)
}
# don't forget to answer the last question in plain text after your code - not as a comment.
confidence_interval <- compute_confidence_interval(conversion_rate_test, conversion_rate_control, length(test_group), length(control_group), 2.575)
difference_in_conversion_rates <- conversion_rate_test - conversion_rate_control
test_group <- data[grep("Test", data$exposed),]
num_purchased_test <- sum(test_group$purchased)
conversion_rate_test <- num_purchased_test/length(test_group)
control_group <- data[grep("Control", data$exposed),]
num_purchased_control <- sum(control_group$purchased)
conversion_rate_control <- num_purchased_control/length(control_group)
difference_in_conversion_rates <- conversion_rate_test - conversion_rate_control
difference_in_conversion_rates <- conversion_rate_test - conversion_rate_control
print(difference_in_conversion_rates)
compute_confidence_interval <- function(p1, p2, n1, n2, Z){
confidence_interval <- rep(0, times = 2)
confidence_interval[1] <- p1 - p2 - Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2)))
confidence_interval[2] <- p1 - p2 + Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2)))
return(confidence_interval)
}
# don't forget to answer the last question in plain text after your code - not as a comment.
confidence_interval <- compute_confidence_interval(conversion_rate_test, conversion_rate_control, length(test_group), length(control_group), 2.575)
print(confidence_interval)
print(length(test_group))
print(length(test_group$purchased))
test_group <- data[grep("Test", data$exposed),]
num_purchased_test <- sum(test_group$purchased)
conversion_rate_test <- num_purchased_test/length(test_group$purchased)
control_group <- data[grep("Control", data$exposed),]
num_purchased_control <- sum(control_group$purchased)
conversion_rate_control <- num_purchased_control/length(control_group$purchased)
# don't forget to answer the last question in plain text after your code - not as a comment.
confidence_interval <- compute_confidence_interval(conversion_rate_test, conversion_rate_control, length(test_group$purchased), length(control_group$purchased), 2.575)
print(confidence_interval)
difference_in_conversion_rates <- conversion_rate_test - conversion_rate_control
print(difference_in_conversion_rates)
compute_confidence_interval <- function(p1, p2, n1, n2, Z){
confidence_interval <- rep(0, times = 2)
confidence_interval[1] <- round(p1 - p2 - Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2))), digits = 5)
confidence_interval[2] <- round(p1 - p2 + Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2))), digits = 5)
return(confidence_interval)
}
# don't forget to answer the last question in plain text after your code - not as a comment.
confidence_interval <- compute_confidence_interval(conversion_rate_test, conversion_rate_control, length(test_group$purchased), length(control_group$purchased), 2.575)
print(confidence_interval)
?prop.test
# don't forget to answer the last question in plain text after your code - not as a comment.
successes <- c(sum(test_group$purchased), sum(control_group$purchased))
n <-c(length(test_group$purchased), length(control_group$purchased))
prop.test(successes, n, alternative = "greater", conf.level = 0.99)
# don't forget to answer the last question in plain text after your code - not as a comment.
successes <- c(sum(test_group$purchased), sum(control_group$purchased))
n <-c(length(test_group$purchased), length(control_group$purchased))
prop.test(successes, n, conf.level = 0.99)
successes <- c(sum(test_group$purchased), sum(control_group$purchased))
n <-c(length(test_group$purchased), length(control_group$purchased))
prop.test(successes, n, conf.level = 0.99)
?pchisq
pchisq(x, df = 1)
# don't forget to answer the last question in plain text after your code - not as a comment.
x <- 1:10
pchisq(x, df = 1)
# don't forget to answer the last question in plain text after your code - not as a comment.
x <- 1:10
pchisq(x, df = 1)
1-pchisq(x, df = 1)
# don't forget to answer the last question in plain text after your code - not as a comment.
x <- 1:10
pchisq(x, df = 1)
1-pchisq(x, df = 1)
x <- 0:10
pchisq(x, df = 1)
1-pchisq(x, df = 1)
par(mfrow=c(1,2))
test_counts <- table(test_group$income)
barplot(test_counts, xlab = "Income", main = "Test Sample")
control_counts <- table(control_group$income)
barplot(control_counts, xlab = "Income", main = "Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$income)
barplot(test_counts, xlab = "Income", main = "Test Sample")
control_counts <- table(control_group$income)
barplot(control_counts, xlab = "Income", main = "Control Sample")
# don't forget to answer the last question in plain text after your code and plots - not as a comment.
par(mfrow=c(1,2))
test_counts <- table(test_group$gender)
barplot(test_counts, xlab = "Gender", main = "Test Sample")
control_counts <- table(control_group$gender)
barplot(control_counts, xlab = "Gender", main = "Control Sample")
par(mfrow=c(1,2))
test_counts <- table(test_group$age)
barplot(test_counts, xlab = "Age", main = "Test Sample")
control_counts <- table(control_group$age)
barplot(control_counts, xlab = "Age", main = "Control Sample")
compute_confidence_interval <- function(p1, p2, n1, n2, Z){
confidence_interval <- rep(0, times = 2)
confidence_interval[1] <- round(p1 - p2 - Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2))), digits = 5)
confidence_interval[2] <- round(p1 - p2 + Z*(sqrt(((p1*(1-p1))/n1)+((p2*(1-p2))/n2))), digits = 5)
return(confidence_interval)
}
difference_in_conversion_rates <- conversion_rate_test - conversion_rate_control
print(difference_in_conversion_rates)
x <- c(conversion_rate_test, conversion_rate_control)
pchisq(x, df = 1)
1-pchisq(x, df = 1)
x <- 11.64
pchisq(x, df = 1)
1-pchisq(x, df = 1)
x <- 11.644
pchisq(x, df = 1)
1-pchisq(x, df = 1)
#x = x-squared statistic from the output of Q13.
x <- 11.644
pchisq(x, df = 1, lower.tail = FALSE)
#x = x-squared statistic from the output of Q13.
x <- 11.644
pchisq(x, df = 1)
