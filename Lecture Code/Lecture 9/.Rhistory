# factorial: n! = n*(n-1)*...*2*1
factorial(x=4)   # 4! = 4*3*2*1=24
factorial(x=6)   # 6! = 6*5*4*3*2*1=720
####
# n choose k (combinations)
choose(n=5, k=3)     # number of ways to choose 3 items from 5 = 10
choose(n=10, k=0)    # number of ways to choose 0 items from 10 = 1
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
?rbinom
####
# binomial pmf:
dbinom(x=4, size=10, prob=0.5)     # P(X=4) when n=10, p=0.5 (approx. 0.205)
dbinom(x=12, size=20, prob=0.75)   # P(X=12) when n=20, p=0.75 (approx, 0.061)
?dbinom
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
####
# binomial pmf:
dbinom(x=4, size=10, prob=0.5)     # P(X=4) when n=10, p=0.5 (approx. 0.205)
dbinom(x=12, size=20, prob=0.75)   # P(X=12) when n=20, p=0.75 (approx, 0.061)
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
# simulating draws from a binomial distribution
rbinom(n=10, size=5, prob=0.6)    # 10 independent draws from a binomial
x <- rbinom(n=1000, size=5, prob=0.6) # comparing theory and practice
par(mfrow=c(2,2)) # 2x2 figure with 4 plots max in 2 columns
# graph of binomial pmf, empirical pmf when n=5, p=0.5 (i.e., 5 flips of a fair coin)
# to compare graphs, we want the y-axis limits to be the same
y.max <- max(c(dbinom(0:5, size=5, prob=0.6), as.vector(table(x)/length(x))))
barplot(dbinom(0:5, size=5, prob=0.6), names.arg=0:5, las=TRUE,
col="royalblue", xlab="k (number of successes)", ylab="probability P(X=k)",
main="PMF for Binomial(n=5, p=0.6)", ylim=c(0, y.max))
barplot(as.vector(table(x)/length(x)), names.arg=0:5, las=TRUE,
col="royalblue", xlab="k (number of successes)", ylab="probability P(X=k)",
main="Empirical PMF for \nBinomial(n=5, p=0.6)", ylim=c(0, y.max))
text(x=1.8, y=0.3, labels="1,000 random draws")
# graph of binomial cdf, empirical cdf when n=5, p=0.5 (i.e., 5 flips of a fair coin)
plot.stepfun(stepfun(0:5, c(0, pbinom(q=0:5, size=5, prob=0.6)), right=TRUE), las=TRUE,
ylab=expression(P(X<= k)), main="CDF for Binomial(n=5, p=0.6)")
# see ?plotmath for adding mathematical expressions to your plots
# ecdf() computes the empirical cdf function
plot(ecdf(x), las=TRUE, main="Empirical CDF for \nBinomial(n=5, p=0.6)")
text(x=0.8, y=0.9, labels=c("1,000 random draws"))
# estimating the expected value using simulation:
mean(rbinom(n=10, size=5, prob=0.6))
mean(rbinom(n=100, size=5, prob=0.6))
mean(rbinom(n=1000, size=5, prob=0.6))
mean(rbinom(n=1000, size=5, prob=0.6))
